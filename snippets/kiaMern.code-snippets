{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Print to console0": {
		"scope": "javascript,typescript",
		"prefix": "cl",
		"body": [
			"console.log($1);"
		],
		"description": "Log output to console"
	},
	"Print to console": {
		"scope": "javascript,typescript",
		"prefix": "cll",
		"body": [
			"console.log('---------------------------- i am here ----------------------------');",
			"console.log($1);"
		],
		"description": "Log output to console"
	},
	"Print to console2": {
		"scope": "javascript,typescript",
		"prefix": "clll",
		"body": [
			"console.log('**************************** i am here ****************************');",
			"console.log($1);"
		],
		"description": "Log output to console"
	},
	"Print to console3": {
		"scope": "javascript,typescript",
		"prefix": "cllll",
		"body": [
			"console.log('############################ i am here ############################');",
			"console.log($1);"
		],
		"description": "Log output to console"
	},
	"Print to console4": {
		"scope": "javascript,typescript",
		"prefix": "clllll",
		"body": [
			"console.log('++++++++++++++++++++++++++++ i am here ++++++++++++++++++++++++++++');",
			"console.log($1);"
		],
		"description": "Log output to console"
	},
	"nest service": {
		"scope": "javascript,typescript",
		"prefix": "nss",
		"body": [
			"async $1 ($2) {",
			"    return `this is $1 service. Args $2`;",
			"}",
			"$3"
		],
		"description": "Log output to console"
	},
	"nest controller": {
		"scope": "javascript,typescript",
		"prefix": "nsc",
		"body": [
			"async $2 ($3) {",
			"    return await this.$1.$2($3);",
			"}",
			"$4"
		],
		"description": "Log output to console"
	}
}